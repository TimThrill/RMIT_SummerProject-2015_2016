//
// Generated file, do not edit! Created by nedtool 4.6 from Beacon.msg.
//

#ifndef _BEACON_M_H_
#define _BEACON_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "ApplPkt_m.h"
#include "Coord.h"
// }}

/**
 * Class generated from <tt>Beacon.msg:28</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet Beacon extends ApplPkt
 * {
 *     Coord srcPosition; // position of source peer node
 *     simtime_t timeStamp;	// Time stamp
 *     uint32_t srcNetworkAddress;	// Source network address
 * }
 * </pre>
 */
class Beacon : public ::ApplPkt
{
  protected:
    Coord srcPosition_var;
    simtime_t timeStamp_var;
    uint32_t srcNetworkAddress_var;

  private:
    void copy(const Beacon& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Beacon&);

  public:
    Beacon(const char *name=NULL, int kind=0);
    Beacon(const Beacon& other);
    virtual ~Beacon();
    Beacon& operator=(const Beacon& other);
    virtual Beacon *dup() const {return new Beacon(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual Coord& getSrcPosition();
    virtual const Coord& getSrcPosition() const {return const_cast<Beacon*>(this)->getSrcPosition();}
    virtual void setSrcPosition(const Coord& srcPosition);
    virtual simtime_t getTimeStamp() const;
    virtual void setTimeStamp(simtime_t timeStamp);
    virtual uint32_t getSrcNetworkAddress() const;
    virtual void setSrcNetworkAddress(uint32_t srcNetworkAddress);
};

inline void doPacking(cCommBuffer *b, Beacon& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Beacon& obj) {obj.parsimUnpack(b);}


#endif // ifndef _BEACON_M_H_

